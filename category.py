import callCategories
import caller

class Category:
    categories = []
    def __init__(self, func, name, data):
        self.func = func
        self.name = name
        self.data = data
        
def initCategories():
    Category.categories = []
    Category.categories.append(Category(callCategories.SumOfPosIntDiv, "Sum of Positive Integral Divisors",[ 22, 23, 25, 26, 39, 51, 56 ]))
    Category.categories.append(Category(callCategories.XsquaredPlusX, "X Squared Plus X",[ 61, 61, 55, 53, 56, 67 ]))
    Category.categories.append(Category(callCategories.RelativelyPrime, "Relatively Prime",[ 23, 24, 41, 63, 65, 65, 66, 67, 67, 67 ]))
    Category.categories.append(Category(callCategories.RepeatingDecimalToFraction, "Repeating Decimal to Fraction Conversions",[ 21, 22, 24, 24, 24, 24, 25, 25, 25, 26, 26, 28, 28, 28, 29, 29, 33, 34, 36, 37, 42, 27, 36 ]))
    Category.categories.append(Category(callCategories.Squares, "Squares",[ 3, 5, 6, 6, 6, 7, 8, 8, 8, 9, 9, 11, 13, 14, 18, 32, 41, 43, 44, 45, 45, 47, 52, 52, 52, 62, 63, 64, 66, 67, 68, 68, 69, 76, 2, 2, 2, 3, 3, 4, 6, 6, 7, 8, 45, 59, 61, 47, 41, 51 ]))
    Category.categories.append(Category(callCategories.SubSets, "Subsets",[ 36, 41, 48 ]))
    Category.categories.append(Category(callCategories.SubtractingReverses, "Subtracting Reverses",[ 2, 3, 1, 1, 1, 1 ]))
    Category.categories.append(Category(callCategories.XSquaredMinusXSquaredSplitUp, "X Squared Minus X Squared Split Up",[ 51, 52, 52, 54, 55, 59, 61, 62, 63, 63, 64, 64, 65, 66, 66, 66, 67 ]))
    Category.categories.append(Category(callCategories.WhichIsLargerOrSmaller, "Which is Larger or Smaller",[ 4, 6, 6, 6, 6, 7, 8, 9, 11, 12, 12, 12, 12, 16, 17, 18, 18, 19 ]))
    Category.categories.append(Category(callCategories.SubtractingTwoFractions, "Subtracting Two Fractions",[ 4, 11, 31, 57, 58, 58, 61, 62, 63, 64, 65, 66, 69 ]))
    Category.categories.append(Category(callCategories.InfiniteSequences, "Infinite Sequences",[ 51, 51, 52, 53, 53, 54, 54, 56, 57, 57, 58, 66, 68, 72 ]))
    Category.categories.append(Category(callCategories.IntegersBetweenXandY, "Integers Between X and Y",[ 15, 21, 21, 21, 25, 28, 33, 38, 39 ]))
    Category.categories.append(Category(callCategories.Inverse, "Inverses",[ 11, 11, 12, 12, 14 ]))
    Category.categories.append(Category(callCategories.SumOfTwoSquares, "Sum of Two Squares",[ 34, 36, 36, 39, 41, 41, 42, 45, 45, 47, 49, 57, 66, 34, 24, 34, 23, 21 ]))
    Category.categories.append(Category(callCategories.WhatPercent, "What Percent",[ 14, 15, 16, 21, 28, 29, 32, 24, 28, 32, 26 ]))
    Category.categories.append(Category(callCategories.ProductOfCoefficients, "Product of Coefficients",[ 44, 61, 62, 63, 64, 67, 68 ]))
    Category.categories.append(Category(callCategories.Multiply2MixedNumbers, "Multiplying Two Mixed Numbers",[ 7, 9, 9, 26, 31, 33, 36, 36, 36, 36, 37, 37, 39, 47, 52, 54, 64, 71, 27, 39, 47, 64, 33 ]))
    Category.categories.append(Category(callCategories.ATimesBPlusATimesC, "A Times B Plus A Times C",[ 39, 48, 49, 11, 11, 11, 11, 14, 16, 16, 16, 18, 18, 19, 19, 19, 19, 22, 24, 63, 64, 68, 56, 42, 39 ]))
    Category.categories.append(Category(callCategories.ATimesAOverB, "A Times A Over B",[ 11, 11, 21, 23, 39, 38, 12, 34, 34, 71, 71, 71, 74, 74, 75, 77, 77, 77, 75 ]))
    Category.categories.append(Category(callCategories.RegularNGonDegrees, "Regular N-Gon Degrees",[ 46, 48, 51, 52, 55, 62, 62, 62, 64, 64, 69 ]))
    Category.categories.append(Category(callCategories.SqrtATimesB, "Square Root of A Times B",[ 23, 26, 27, 34, 35, 41, 42, 44, 46, 49, 28 ]))
    Category.categories.append(Category(callCategories.GCDLCM, "GCD and LCM",[ 11, 11, 12, 12, 12, 14, 14, 15, 16, 16, 17, 17, 17, 19, 21, 24, 25, 28, 31, 34, 7, 11, 11, 12, 12, 17, 18, 18, 18, 18, 18, 23, 24 ]))
    Category.categories.append(Category(callCategories.MultiplyBy11, "Multiplication by 11",[ 2, 2, 2, 2, 4, 2, 4, 9, 12, 34, 63, 65, 68, 68, 68, 71, 7, 8 ]))
    Category.categories.append(Category(callCategories.MultiplyBy25, "Multiplication by 25",[ 1, 2, 13, 1, 2, 2, 2, 2, 3, 6, 8, 8, 14, 6, 4, 2, 1 ]))
    Category.categories.append(Category(callCategories.MultiplyBy125, "Multiplication by 125",[ 33, 33, 34, 34, 34, 35, 35, 69, 33, 34, 7, 2, 32 ]))
    Category.categories.append(Category(callCategories.MultiplyBy429, "Multiplication by 429",[ 14, 15, 16, 17, 18, 18, 19, 29, 29, 41, 41, 41, 43, 43, 44, 44, 45, 47, 48, 61, 66, 66, 71, 72 ]))
    Category.categories.append(Category(callCategories.MultiplyingPowers, "Multiplying with Exponents",[ 75, 75, 77, 77, 77, 77, 77, 77, 77, 79, 79, 79, 71 ]))
    Category.categories.append(Category(callCategories.NumberIntegralDivisors, "Number of Integral Divisors",[ 17, 21, 21, 25, 25, 26, 28, 28, 29, 36, 54, 28, 31 ]))
    Category.categories.append(Category(callCategories.Speed, "Speed",[ 26, 48, 48, 46, 45, 31, 24, 24 ]))
    Category.categories.append(Category(callCategories.CubeRt, "Cube Roots",[ 25, 34, 35, 38, 41, 41, 42, 45, 24, 31, 31, 35, 36, 38, 39, 31 ]))
    Category.categories.append(Category(callCategories.CubesAndFourths, "Cubes and Fourths",[ 3, 3, 14, 14, 18, 19, 31, 34, 22, 23, 22 ]))
    Category.categories.append(Category(callCategories.DegreeRadian, "Degrees and Radians",[ 54, 61, 63, 68, 68, 69 ]))
    Category.categories.append(Category(callCategories.DifferenceOfTwoCubes, "Difference of Two Cubes",[ 38, 39, 39 ]))
    Category.categories.append(Category(callCategories.DifferenceOfTwoSquares, "Difference of Two Squares",[ 21, 26, 28, 29, 29, 29, 29, 32, 33, 33, 35, 37, 37, 39 ]))
    Category.categories.append(Category(callCategories.DistinctDiagonals, "Distinct Diagonals",[ 51, 55, 62, 63, 63 ]))
    Category.categories.append(Category(callCategories.TwodigitTimesTwodigit, "Two Digit Times Two Digit",[ 1, 3, 3, 5, 6, 7, 9, 11, 11, 12, 12, 13, 14, 14, 15, 15, 15, 16, 16, 17, 17, 17, 17, 17, 18, 18, 19, 19, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 23, 23, 24, 24, 24, 25, 26, 26, 26, 26, 26, 27, 27, 27, 28, 29, 29, 32, 33, 34, 34, 36, 36, 36, 38, 38, 38, 39, 41, 41, 42, 42, 42, 42, 42, 44, 48, 48, 49, 49, 54, 54, 75, 18, 25, 22, 12, 13, 13 ]))
    Category.categories.append(Category(callCategories.ThreeDigitTimesSomething, "Multiplication by Three Digit Numbers",[ 42, 44, 45, 47, 47, 48, 48, 49, 56, 59, 59, 66, 67, 69, 69, 74, 26, 23, 24, 24, 11, 11, 11, 1, 2, 3, 3, 3, 4, 4, 14, 13, 17, 14, 3 ]))
    Category.categories.append(Category(callCategories.MultiplyBy3367, "Multiplication by 3367",[ 22, 27, 28, 29, 29, 29 ]))
    Category.categories.append(Category(callCategories.AOverBMinusBOverA, "A Over B Minus B Over A",[ 12, 15, 15, 16, 17, 18 ]))
    Category.categories.append(Category(callCategories.AOverBPlusBOverA, "A Over B Plus B Over A",[ 12, 13, 15, 27, 75, 77, 77, 46, 43, 73, 73 ]))
    Category.categories.append(Category(callCategories.ASquaredOverAMinus1, "A Squared Over A Minus 1",[ 3, 6, 7, 13 ]))
    Category.categories.append(Category(callCategories.ATimesBPlusDifference, "A Times B Plus Difference",[ 45, 46, 47, 48, 48, 51, 41, 49, 44, 44 ]))
    Category.categories.append(Category(callCategories.CelsiusFahrenheitConv, "Temperature Conversions",[ 76, 76, 76, 77 ]))
    Category.categories.append(Category(callCategories.Bases, "Bases",[ 22, 22, 23, 23, 25, 25, 25, 26, 26, 27, 27, 29, 29, 31, 31, 32, 32, 33, 33, 34, 34, 35, 35, 36, 36, 36, 37, 37, 37, 37, 37, 37, 39, 39, 39, 42, 46, 49, 49, 49, 54, 61, 61, 61, 62, 62, 63, 63, 63, 63, 64, 65, 65, 66, 66, 68, 68, 68, 68, 68, 69, 69, 69, 71, 71, 71, 71, 72, 72, 73, 73, 73, 74, 74, 75, 75, 75, 75, 76, 79 ]))
    Category.categories.append(Category(callCategories.Division, "Division",[ 1, 2, 3, 4, 4, 4, 5, 7, 7, 7, 7, 8, 9, 12, 13, 13, 15, 26, 27, 31, 31, 31, 32, 36, 38, 38, 41, 41, 41, 45, 47, 52, 55, 56, 71, 58, 39, 2, 2 ]))
    Category.categories.append(Category(callCategories.Expansions, "Expansions",[ 51, 52, 52, 54, 54, 54, 55, 55, 57, 57, 57, 59, 59, 59, 59, 59, 59, 59, 62, 65, 68, 74, 69 ]))
    Category.categories.append(Category(callCategories.UnitsDigit, "Units Digit",[ 38, 42, 45, 45, 46, 46, 46, 48, 48, 49, 49 ]))
    Category.categories.append(Category(callCategories.PolygonalNumbers, "Polygonal Numbers",[ 71, 71, 74, 72, 77, 71, 72, 77 ]))
    Category.categories.append(Category(callCategories.SeriesOfIntWithNoDots, "Short Series of Integers",[ 15, 15, 15, 16, 16, 16, 17, 18, 19, 19, 19, 8, 8, 8, 9, 12, 14, 14, 28, 14 ]))
    Category.categories.append(Category(callCategories.SeriesOfFractions, "Series of Fractions",[ 71, 73, 73, 75, 76, 79, 3, 4, 4, 11, 11, 11, 11, 12, 16, 17, 17, 19, 14, 5, 15 ]))
    Category.categories.append(Category(callCategories.SequencesWithPowersOrFactorials, "Sequences with Powers or Factorials",[ 78, 79, 79, 79, 79, 79, 79, 79, 71, 71, 71, 52, 45, 62, 63, 65, 74 ]))
    Category.categories.append(Category(callCategories.Roman, "Roman Numerals",[ 3, 6, 6, 7, 8, 8, 8, 8, 8, 9, 9, 9, 12, 12, 12, 13, 13, 13, 16, 16, 16, 16, 18 ]))
    Category.categories.append(Category(callCategories.PrimeDivisors, "Prime Divisors",[ 18, 19, 19, 35, 37 ]))
    Category.categories.append(Category(callCategories.Volume, "Volume",[ 58, 59, 61, 61, 64, 66, 69 ]))
    Category.categories.append(Category(callCategories.Vertex, "Vertex of a Parabola",[ 46, 56, 61 ]))
    Category.categories.append(Category(callCategories.UnitConversions, "Unit Conversions",[ 13, 13, 15, 15, 15, 15, 15, 16, 17, 17, 17, 18, 19, 23, 26, 27, 27, 27, 28, 28, 29, 29, 31, 32, 53, 56, 56, 57, 57, 58, 58, 58, 25 ]))
    Category.categories.append(Category(callCategories.RightTriangles, "Right Triangles",[ 41, 42, 43, 43, 43, 44, 46, 46, 47, 49, 51, 52, 56, 57, 59 ]))
    Category.categories.append(Category(callCategories.SumAndProductOfRoots, "Sum and Product of Roots",[ 25, 31, 31, 31, 32, 33, 34, 34, 35, 35, 35, 35, 35, 37, 37, 37, 38, 49 ]))
    Category.categories.append(Category(callCategories.SquareRootOperations, "Square Root Operations",[ 38, 46 ]))
    Category.categories.append(Category(callCategories.SameResults, "Equal Number Operations",[ 21, 21, 21, 24, 25, 33, 34, 39, 55 ]))
    Category.categories.append(Category(callCategories.Remainders, "Remainders",[ 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 25, 25, 25, 26, 27, 27, 27, 29, 29, 32, 32, 33, 33, 38, 65, 65, 67, 69, 69, 72, 72, 72, 72, 72, 72, 72, 72, 73, 73, 73, 73, 74, 74, 75, 75, 76, 76, 76, 76, 23 ]))
    Category.categories.append(Category(callCategories.QuadraticWithK, "Quadratic with K",[ 35, 46, 47, 49, 56 ]))
    Category.categories.append(Category(callCategories.Polar, "Polar Coordinates",[ 77, 77, 77 ]))
    Category.categories.append(Category(callCategories.PermComb, "Permutations and Combinations",[ 43, 45, 51, 52, 54, 54, 55, 57, 58, 58, 59, 59, 65, 76, 51, 59, 59, 61, 62, 68, 58, 73, 66 ]))
    Category.categories.append(Category(callCategories.PercentToFraction, "Percent to Fraction Conversions",[ 5, 5, 6, 9, 15, 33, 3, 5, 7, 7, 8 ]))
    Category.categories.append(Category(callCategories.PercentToDecimal, "Percent to Decimal Conversions",[ 5, 5, 5, 5, 7, 12, 14 ]))
    Category.categories.append(Category(callCategories.APercentOfBIsC, "A Percent of B is C",[ 13, 14, 15, 17, 17, 17, 17, 18, 19, 19, 23, 23, 24, 26, 28, 29, 33, 37, 39, 39, 46, 46, 46, 51, 55, 57, 2, 12 ]))
    Category.categories.append(Category(callCategories.APercentOfBIsCPercentOfD, "A Percent of B is C Percent of D",[ 24, 25, 32, 32, 36, 43, 44, 47 ]))
    Category.categories.append(Category(callCategories.AddingSubtractingMixedNumbers, "Adding and Subtracting Mixed Numbers",[ 6, 8, 9, 15, 15, 33, 34 ]))
    Category.categories.append(Category(callCategories.Adding2Fractions, "Adding Two Fractions",[ 4, 4, 9, 61, 61, 63, 64, 67, 67 ]))
    Category.categories.append(Category(callCategories.AIsBPercentOfC, "A is B Percent of C",[ 12, 13, 13, 14, 15, 18, 19, 22, 28, 28, 28, 61, 64, 65, 65, 66, 68 ]))
    Category.categories.append(Category(callCategories.APercentOfBWithSomeOtherOperation, "Percentage Operations",[ 11, 11, 13, 14, 16, 17, 19, 22, 24 ]))
    Category.categories.append(Category(callCategories.Asymptotes, "Asymptotes",[ 71 ]))
    Category.categories.append(Category(callCategories.Integrals, "Integrals",[ 75, 77, 77, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 79, 79, 79, 79 ]))
    Category.categories.append(Category(callCategories.Days, "Days",[ 21, 27 ]))
    Category.categories.append(Category(callCategories.DecimalToFraction, "Decimal to Fraction Conversions",[ 7, 11, 13, 6, 75 ]))
    Category.categories.append(Category(callCategories.DecimalToPercent, "Decimal to Percent Conversions",[ 5 ]))
    Category.categories.append(Category(callCategories.Derivative, "Derivatives",[ 72, 72, 73, 74, 74, 74, 74, 74, 77, 77, 77, 79, 76 ]))
    Category.categories.append(Category(callCategories.Determinant, "Determinants",[ 62, 63, 67, 68, 69, 71, 68 ]))
    Category.categories.append(Category(callCategories.DividingIntoLengthsOrRatio, "Dividing into Lengths or Ratios",[ 34, 35, 35, 64, 27 ]))
    Category.categories.append(Category(callCategories.DivisionOrFractionToDecimal, "Division or Fraction to Decimal",[ 3, 4, 4, 4, 5, 5, 5, 5, 6, 7, 7, 8, 9, 13, 13, 14, 17, 17, 58 ]))
    Category.categories.append(Category(callCategories.DivisionOrFractionToMixedNumber, "Division or Fraction to Mixed Number",[ 4, 5, 5, 5, 6, 7, 8, 9, 9, 9 ]))
    Category.categories.append(Category(callCategories.Equations, "Equations",[ 26, 31, 32, 33, 37, 37, 39, 39, 42, 43, 43, 45, 45, 45, 46, 47, 48, 48, 55, 63, 65, 66, 69, 55, 47, 46, 39, 39, 31, 31, 31, 31, 31, 29, 29, 28, 28, 38, 32, 31, 29, 22, 22, 21, 44, 31, 61, 62 ]))
    Category.categories.append(Category(callCategories.Estimations, "Estimations",[ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80 ]))
    Category.categories.append(Category(callCategories.ExponentialEquations, "Exponential Equations",[ 48, 49, 49, 47, 46, 46, 45, 45, 45, 45, 44, 44, 42, 42, 42, 42, 43, 43, 37, 35, 28, 72, 53, 52, 46, 44, 44, 43, 58, 63, 65, 54, 35, 79 ]))
    Category.categories.append(Category(callCategories.ExpressionsInvolvingRepeatingDecimals, "Expressions Involving Repeating Decimals",[ 22, 22, 27, 28 ]))
    Category.categories.append(Category(callCategories.FofX, "Functions",[ 23, 23, 25, 28, 29, 31, 32, 32, 34, 36, 37, 51, 62, 65, 66, 69, 71, 71, 72, 73, 73, 73, 73, 74, 74, 76, 61, 64 ]))
    Category.categories.append(Category(callCategories.FofXInverse, "Inverse Functions",[ 72, 73, 74, 74, 75, 76, 76, 78 ]))
    Category.categories.append(Category(callCategories.Factorials, "Factorials",[ 53, 55, 56, 56, 59, 49, 51, 51, 42 ]))
    Category.categories.append(Category(callCategories.FindTheTerm, "Find the Term",[ 41, 42, 42, 42, 43, 43, 44, 44, 44, 45, 46, 46, 46, 47, 47, 47, 48, 48, 48, 49, 51, 52, 53, 53, 54, 55, 56, 56, 57, 57, 58, 76, 78 ]))
    Category.categories.append(Category(callCategories.FiniteSequences, "Finite Sequences",[ 16, 18, 26, 26, 27, 27, 27, 27, 44, 44, 52, 54, 55, 58, 58, 59, 72, 72, 79, 79, 79, 79, 44 ]))
    Category.categories.append(Category(callCategories.FractionDivision, "Fraction Diviion",[ 3, 3, 4, 5, 8, 13, 13, 18, 18, 23, 24, 24, 72, 72, 74, 36 ]))
    Category.categories.append(Category(callCategories.FractionMultiplication, "Fraction Multiplication",[ 4, 4, 6, 18, 18, 19 ]))
    Category.categories.append(Category(callCategories.FractionToPercent, "Fraction to Percent",[ 5, 5, 7, 7, 8, 9, 11, 13, 14, 14, 19, 33, 33, 38, 44, 46, 49, 3, 5, 5, 5 ]))
    Category.categories.append(Category(callCategories.GeometricFigures, "Geometric Figures",[ 58, 59, 61, 61, 64, 66, 69, 26, 27, 33, 35, 35, 35, 37, 39, 39, 41, 42, 42, 43, 43, 43, 43, 43, 44, 45, 45, 47, 48, 48, 48, 51, 51, 52, 55, 69, 79, 51 ]))
    Category.categories.append(Category(callCategories.HowManyRegionsOrLines, "Regions and Lines",[ 67, 69, 69, 71, 71, 71, 71, 74, 75, 78, 79, 79, 51 ]))
    Category.categories.append(Category(callCategories.HowManyXDigitNumbers, "X-Digit Numbers",[ 61, 61, 66, 67, 53 ]))
    Category.categories.append(Category(callCategories.CostRatios, "Cost Ratios",[ 19, 21, 21, 21, 21, 22, 22, 23, 25, 25, 25, 26, 27, 29, 29, 31, 32, 35, 36, 38, 38, 17, 33 ]))
    Category.categories.append(Category(callCategories.ImaginaryNumbers, "Imaginary Numbers",[ 48, 48, 52, 52, 53, 53, 53, 53, 53, 53, 53, 53, 54, 54, 54, 55, 55, 56, 56, 57, 57, 57, 57, 58, 58, 64, 64, 41, 49 ]))
    Category.categories.append(Category(callCategories.Inequalities, "Inequalities",[ 38, 42, 45, 47, 49, 65, 52 ]))
    Category.categories.append(Category(callCategories.IsTo, "A is to B as C is to D",[ 28, 37, 25 ]))
    Category.categories.append(Category(callCategories.Limits, "Limits",[ 73, 73, 75, 75, 75, 75, 76, 77, 77, 77, 77, 78, 78 ]))
    Category.categories.append(Category(callCategories.LinesAndPoints, "Lines and Points",[ 76, 27, 42, 43, 43, 47, 47, 47, 47, 48, 51, 51, 52, 52, 54, 55, 63, 59, 59, 58, 55, 55, 52, 52, 51, 49, 49, 47, 43 ]))
    Category.categories.append(Category(callCategories.LiquidMeasurements, "Liquid Measurements",[ 25, 25, 32, 32, 34, 34, 43, 52, 28, 28, 33, 53, 38 ]))
    Category.categories.append(Category(callCategories.Logs, "Logs",[ 51, 53, 53, 53, 53, 53, 54, 55, 55, 55, 56, 56, 57, 57, 58, 58, 58, 58, 59, 61, 62, 64, 64, 64, 64, 64, 66, 66, 67, 67, 67, 68, 69, 69, 74, 75, 79, 66 ]))
    Category.categories.append(Category(callCategories.MaximumProduct, "Maximum Products",[ 56, 59, 59, 61, 61, 62, 62, 63 ]))
    Category.categories.append(Category(callCategories.MeanMedianModeRangeAverage, "Means, Medians, Modes, and Ranges",[ 13, 13, 14, 15, 16, 16, 16, 16, 19, 19, 19, 19, 36, 16, 16, 14 ]))
    Category.categories.append(Category(callCategories.Modulo, "Modulo",[ 62, 73, 74, 74, 76, 78 ]))
    Category.categories.append(Category(callCategories.ModulusImaginary, "Modulus of Imaginary Numbers",[ 49, 53, 58 ]))
    Category.categories.append(Category(callCategories.MultiplicationAround100or1000, "Multiplication around 100 or 1000",[ 26, 36, 36, 38, 38, 43, 47, 47, 53, 56, 62, 49, 66, 69, 73, 73, 64, 63, 41, 41, 41, 38, 38, 37, 35, 45, 44, 26, 38 ]))
    Category.categories.append(Category(callCategories.OddsProb, "Odds and Probability",[ 51, 54, 56, 57, 57, 58, 59, 62, 62, 64, 64, 66, 67, 67, 67, 67, 69, 69, 72, 73, 76, 76, 76, 78, 59, 61, 66, 76 ]))
    Category.categories.append(Category(callCategories.Parabolas, "Parabolas",[ 79, 76, 72, 56, 54, 34 ]))
    Category.categories.append(Category(callCategories.PolynomialDivision, "Polynomial Division",[ 62, 75 ]))
    Category.categories.append(Category(callCategories.RandomOperations, "Random Operations",[ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 13, 14, 22, 31, 33, 35, 44, 46, 61, 73, 74, 12 ]))
    Category.categories.append(Category(callCategories.SinCosTan, "Trigonometry",[ 54, 55, 55, 56, 57, 57, 57, 59, 62, 62, 62, 63, 63, 64, 65, 65, 65, 65, 65, 65, 66, 67, 67, 67, 67, 67, 68, 68, 68, 68, 74, 75, 75, 75, 76, 53, 63, 63, 64, 65, 65, 66, 67, 68, 68, 69, 72, 72, 73, 76, 53, 54, 56, 57, 58, 65, 73, 75, 58, 55, 56, 56 ]))
    Category.categories.append(Category(callCategories.SolvingInvolvesFactoring, "Solving Involves Factoring",[ 35, 35, 37, 32, 32, 32, 39, 37, 37 ]))
    Category.categories.append(Category(callCategories.VariousWordProblems, "Various Word Problems",[ 15, 21, 22, 32, 32, 36, 37, 38, 38, 39, 41, 44, 48, 49, 51, 52, 54, 57, 74, 76 ]))
    caller.mults = [1] * len(Category.categories)
            
        
    
    

        